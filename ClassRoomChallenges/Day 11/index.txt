/*
    CHALLENGE #1
        - Write a function that accepts name and grade as parameters, and then 
        prints "NAME got a GRADE in social studies" to the console.
*/

function teacher(name,grade){
    console.log(`${name} got a ${grade} in Social Studies`);
}
function teacher(Mitch,B);


/*
    - CHALLENGE #2
        - Write a program that prints all numbers from 300-400
            - for multiples of 6, instead of the number, print 'Marco'
            - for multiples of 8, instead of the number, print 'Lopez'
            - for multiples of 6 AND 8, instead of the number, print 'Marco Lopez'
*/

for (i=300, i<=400, i++){
    if(i % 6 === 0 && i 8 % === 0){
        console.log('Marco Lopez');
    } else if ( i % 6 === 0) {

    }

}




/*
    - CHALLENGE #3
  - Write a function called findPerimeter() that accepts 2 parameters 
  called: length, width.
  - The function should return an interpolated string of 
  'True: the perimeter is ___' if the perimeter is over 20
  - the function should return an interpolated string of 
  'False: the perimeter is ___' if the perimeter is under 20
            HINT: P = x + x + y + y
                  P = 2x + 2y
                  P = 2(x + y)
*/

function findPerimeter(length,width){
   
    if(length * 2 + width * 2 >20) {
    let perimeter = length * 2 + width * 2;
    return `True: the perimeter is ${perimeter}`
    } else{
        if (length * 2 + width * 2 < 20){
        return (`FALSE: the ${perimeter} is)
        }
    }
}

/*
    - CHALLENGE #4
        - Create an object literal called library.
        - the library object will contain 3 properties: name, address, sections
        - name and address will both hold values that are strings. You can 
        fabricate the information.
        - sections will be an object that will store a property 
        called collections, which is an array of more objects. 
        You should include at least 2 objects inside the collections array.
        - the objects stored in the collections array will hold properties 
        of classification, count, and aisle. 
        - both the classification and aisle properties should hold strings 
        as values, and count should hold a value that is a number.
*/



let library={
    name: 'Newburgh Library',
    address: '123 Fake Street',
    sections: {
        collections: [
            {classification: 'fiction',
            count: 25,
            aisle: '3b'},
            {classification: 'history',
            count: 42,
            aisle: '5a'}
        ]
    }
}
console.log(library.sections.collections[0].aisle);
    
